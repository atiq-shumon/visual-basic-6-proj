create or replace procedure Rpt_item_info 
     (p_test_cursor in out test_package.test_type,
		p_option number,p_category varchar2,p_type_code varchar2,p_group varchar2)
as
begin
if p_option=1 then
 open p_test_cursor for
   select a.type_code,a.item_code as item_code,a.item_name item_name,
            a.cate_code as cate_code,(select cate_name 
                   from item_cate_info
             where to_number(cate_code)=to_number(a.cate_code)) as cate_title,a.group_code,
             (select group_name from 
                  item_group_info 
              where to_number(group_code)=to_number(a.group_code) 
              and to_number(type_code)=to_number(a.type_code)) as group_title,
              a.unit_code,(select unit_name from 
                  item_unit_info 
              where to_number(unit_code)=to_number(a.unit_code)) as unit_title ,
              a.re_ord_lbl,a.remarks 
    from item_info a
 where to_number(a.cate_code)=to_number(p_category);
          
       end if;

  if p_option=2 then
     open p_test_cursor for
        select  a.type_code,a.item_code as item_code,a.item_name item_name,
            a.cate_code as cate_code,(select cate_name 
                   from item_cate_info
             where to_number(cate_code)=to_number(a.cate_code)) as cate_title,a.group_code,
             (select group_name from 
                  item_group_info 
              where to_number(group_code)=to_number(a.group_code) and to_number(type_code)=to_number(a.type_code)) as group_title,
              a.unit_code,(select unit_name from 
                  item_unit_info 
              where to_number(unit_code)=to_number(a.unit_code)) as unit_title ,
              a.re_ord_lbl,a.remarks 
          from item_info a
        where to_number(a.cate_code)=to_number(p_category) and 
        to_number(a.type_code)=to_number(p_type_Code);
          
       end if;
if p_option=3 then
 open p_test_cursor for
   select  a.type_code,a.item_code as item_code,a.item_name item_name,
            a.cate_code as cate_code,(select cate_name 
                   from item_cate_info
             where to_number(cate_code)=to_number(a.cate_code)) as cate_title,a.group_code,
             (select group_name from 
                  item_group_info 
              where to_number(group_code)=to_number(a.group_code) and to_number(type_code)=to_number(a.type_code)) as group_title,
              a.unit_code,(select unit_name from 
                  item_unit_info 
              where to_number(unit_code)=to_number(a.unit_code)) as unit_title ,
              a.re_ord_lbl,a.remarks 
       from item_info a
    where to_number(a.cate_code)=to_number(p_category) and to_number(a.type_code)=to_number(p_type_Code) 
   and to_number(group_code)=to_number(p_group);
          
       end if;
end;




create or replace procedure Rpt_Opening_Banalce_info 
     (p_test_cursor in out test_package.test_type,
   p_option number, p_CatCode VARCHAR2)
as
begin
if p_option=1 then
 open p_test_cursor for
   select  g.group_name ,a.item_code, a.item_name, b.URate, b.PurQty,to_char(b.PurQty) as qty, b.exp_date from  item_info a, PurchaseSub b, PurchaseMain c,item_group_info  g 
   where c.PurId= b.PurId and UPPER(c.PurType) = UPPER('O') and to_number(a.item_code) = to_number(b.ITEMID) and to_number(g.group_code)=to_number(a.group_code);
end if;
if p_option=2 then
 open p_test_cursor for
   select g.group_name,a.item_code, a.item_name, b.URate, b.PurQty,to_char(b.PurQty) as qty, b.exp_date from  item_info a, PurchaseSub b, PurchaseMain c, item_group_info  g  
   where c.PurId= b.PurId and UPPER(c.PurType) = UPPER('O') and a.Cate_Code = p_CatCode and to_number(a.item_code) = to_number(b.ITEMID) and to_number(g.group_code)=to_number(a.group_code);
end if;
end;






create or replace procedure Rpt_stock_info
  (p_test_cursor in out test_package.test_type,
   p_option number,p_stock_or_value number,p_CatCode VARCHAR2,p_type_code varchar2,p_Group_code varchar2,
   p_s_date date,p_e_date date)
as
  cursor mycursor(category  varchar2) is
    select distinct item_code,group_code,unit_code from item_info
    where to_number(cate_code)=to_number(category)
    and to_number(item_code) in(select to_number(itemId) from PurchaseSub);

cursor mycursor1(category  varchar2,type varchar2) is
    select distinct item_code,group_code,unit_code from item_info
    where to_number(cate_code)=to_number(category) 
    and to_number(type_code)=to_number(type)
    and to_number(item_code) in(select to_number(itemId) from PurchaseSub);

cursor mycursor2(category  varchar2,type varchar2,p_group varchar2) is
    select distinct item_code,group_code,unit_code from item_info
    where to_number(cate_code)=to_number(category) 
    and to_number(type_code)=to_number(type)
    and to_number(group_code)=to_number(p_group)
    and to_number(item_code) in(select to_number(itemId) from PurchaseSub);

var_item varchar2(6);
var_item_title varchar2(100);
var_item_unit varchar2(10);
var_Unit_title varchar2(100);
var_group varchar2(10);
var_group_title varchar2(100);
var_purQty  number(10,2);
var_purRetQty  number(10,2);
var_IssueQty  number(10,2);
var_issueRetQty number(10,2);
var_adjustQty  number(10,2);
opn_Balance   number(10,2);
clo_Balance   number(10,2);

begin
delete from tmp_item;
commit;
if p_option=1 then
   open mycursor(p_CatCode);
   fetch mycursor into var_item,var_group,var_item_unit;
elsif p_option=2 then
   open mycursor1(p_CatCode,p_type_code);
   fetch mycursor1 into var_item,var_group,var_item_unit;
elsif   p_option=3 then
   open mycursor2(p_CatCode,p_type_code,p_group_code);
   fetch mycursor2 into var_item,var_group,var_item_unit;
end if;
  
   loop
     if mycursor%isopen then
       exit when mycursor%notfound;
     end if;
    if mycursor1%isopen then
       exit when mycursor1%notfound;
     end if;

   if mycursor2%isopen then
       exit when mycursor2%notfound;
     end if;
     
      opn_Balance:=GetOpnBalance(p_stock_or_value,var_item,p_s_date) ;
      select ITEM_NAME into var_item_title
            from item_info
      where to_number(ITEM_CODE)=to_number(var_item);
      select group_name into var_group_title
            from item_group_info
      where to_number(group_code)=to_number(var_group);
      select   unit_name  into var_Unit_title
            from item_unit_info
      where to_number(unit_code)=to_number(var_item_unit);
     

  if p_stock_or_value=1 then   
     select nvl(sum(a.purqty),0) into var_purQty
          from purchasesub a,purchasemain b
       where a.purid=b.purid and to_number(a.Itemid) =to_number(var_item)
      and (to_date(to_char(b.purdate,'dd-mon-yyyy'),'dd-mon-yyyy')
         >=to_date(to_char(p_s_date,'dd-mon-yyyy'),'dd-mon-yyyy') and
          to_date(to_char(b.purdate,'dd-mon-yyyy'),'dd-mon-yyyy')
         <=to_date(to_char(p_e_date,'dd-mon-yyyy'),'dd-mon-yyyy'));
   select nvl(sum(a.ReturnQty),0) into var_purRetQty
      from PurchaseReturnSub a,PurchaseReturnmain b
    where a.PurReturnId =b.PurReturnId and
    to_number(a.Itemcode) =to_number(var_item) and
    (to_date(to_char(b.PurReturnDate,'dd-mon-yyyy'),'dd-mon-yyyy')
         >=to_date(to_char(p_s_date,'dd-mon-yyyy'),'dd-mon-yyyy') and
          to_date(to_char(b.PurReturnDate,'dd-mon-yyyy'),'dd-mon-yyyy')
         <=to_date(to_char(p_e_date,'dd-mon-yyyy'),'dd-mon-yyyy'));
   select nvl(sum(a.Qty),0) into var_IssueQty
      from Issuesub a, IssueMain b
   where a.IssueId =b.IssueId  and  to_number(a.ItemCode) =to_number(var_item) and 
    (to_date(to_char(b.IssueDate,'dd-mon-yyyy'),'dd-mon-yyyy')
         >=to_date(to_char(p_s_date,'dd-mon-yyyy'),'dd-mon-yyyy') and
          to_date(to_char(b.IssueDate,'dd-mon-yyyy'),'dd-mon-yyyy')
         <=to_date(to_char(p_e_date,'dd-mon-yyyy'),'dd-mon-yyyy'));
   select nvl(sum(a.Qty),0) into var_issueRetQty
      from IssueReturnSub a, IssueReturnMain b
   where a.ReturnId =b.ReturnId  and   to_number(a.ItemCode) =to_number(var_item) and 
    (to_date(to_char(b.ReturnDate,'dd-mon-yyyy'),'dd-mon-yyyy')
         >=to_date(to_char(p_s_date,'dd-mon-yyyy'),'dd-mon-yyyy') and
          to_date(to_char(b.ReturnDate,'dd-mon-yyyy'),'dd-mon-yyyy')
         <=to_date(to_char(p_e_date,'dd-mon-yyyy'),'dd-mon-yyyy'));
    select nvl(sum(a.AdjQty),0) into var_adjustQty
      from AdjustmentSub a, AdjustmentMain b
   where a.AdjustmentId =b.AdjustmentId  and   to_number(a.ItemCode) =to_number(var_item) and 
  (to_date(to_char(b.AdjustmentDate,'dd-mon-yyyy'),'dd-mon-yyyy')
         >=to_date(to_char(p_s_date,'dd-mon-yyyy'),'dd-mon-yyyy') and
          to_date(to_char(b.AdjustmentDate,'dd-mon-yyyy'),'dd-mon-yyyy')
         <=to_date(to_char(p_e_date,'dd-mon-yyyy'),'dd-mon-yyyy'));
 
elsif p_stock_or_value=2 then
      select nvl(sum(a.purqty*a.urate),0) into var_purQty
          from purchasesub a,purchasemain b
       where a.purid=b.purid and to_number(a.Itemid) =to_number(var_item)
      and (to_date(to_char(b.purdate,'dd-mon-yyyy'),'dd-mon-yyyy')
         >=to_date(to_char(p_s_date,'dd-mon-yyyy'),'dd-mon-yyyy') and
          to_date(to_char(b.purdate,'dd-mon-yyyy'),'dd-mon-yyyy')
         <=to_date(to_char(p_e_date,'dd-mon-yyyy'),'dd-mon-yyyy'));

   select nvl(sum(a.ReturnQty*a.urate),0) into var_purRetQty
      from PurchaseReturnSub a,PurchaseReturnmain b
    where a.PurReturnId =b.PurReturnId and
    to_number(a.Itemcode) =to_number(var_item) and
    (to_date(to_char(b.PurReturnDate,'dd-mon-yyyy'),'dd-mon-yyyy')
         >=to_date(to_char(p_s_date,'dd-mon-yyyy'),'dd-mon-yyyy') and
          to_date(to_char(b.PurReturnDate,'dd-mon-yyyy'),'dd-mon-yyyy')
         <=to_date(to_char(p_e_date,'dd-mon-yyyy'),'dd-mon-yyyy'));

   select nvl(sum(a.Qty*a.urate),0) into var_IssueQty
      from Issuesub a, IssueMain b
   where a.IssueId =b.IssueId  and  to_number(a.ItemCode) =to_number(var_item) and 
    (to_date(to_char(b.IssueDate,'dd-mon-yyyy'),'dd-mon-yyyy')
         >=to_date(to_char(p_s_date,'dd-mon-yyyy'),'dd-mon-yyyy') and
          to_date(to_char(b.IssueDate,'dd-mon-yyyy'),'dd-mon-yyyy')
         <=to_date(to_char(p_e_date,'dd-mon-yyyy'),'dd-mon-yyyy'));

   select nvl(sum(a.Qty*a.urate),0) into var_issueRetQty
      from IssueReturnSub a, IssueReturnMain b
   where a.ReturnId =b.ReturnId  and   to_number(a.ItemCode) =to_number(var_item) and 
    (to_date(to_char(b.ReturnDate,'dd-mon-yyyy'),'dd-mon-yyyy')
         >=to_date(to_char(p_s_date,'dd-mon-yyyy'),'dd-mon-yyyy') and
          to_date(to_char(b.ReturnDate,'dd-mon-yyyy'),'dd-mon-yyyy')
         <=to_date(to_char(p_e_date,'dd-mon-yyyy'),'dd-mon-yyyy'));

    select nvl(sum(a.AdjQty*a.urate),0) into var_adjustQty
      from AdjustmentSub a, AdjustmentMain b
   where a.AdjustmentId =b.AdjustmentId  and   to_number(a.ItemCode) =to_number(var_item) and 
  (to_date(to_char(b.AdjustmentDate,'dd-mon-yyyy'),'dd-mon-yyyy')
         >=to_date(to_char(p_s_date,'dd-mon-yyyy'),'dd-mon-yyyy') and
          to_date(to_char(b.AdjustmentDate,'dd-mon-yyyy'),'dd-mon-yyyy')
         <=to_date(to_char(p_e_date,'dd-mon-yyyy'),'dd-mon-yyyy'));

end if;
   
      clo_Balance:=(opn_Balance+var_purQty+var_issueRetQty)-(var_IssueQty+var_purRetQty+var_adjustQty);
      insert into tmp_item values(var_item,var_group_title
              ,var_Unit_title,var_item_title,opn_Balance,var_purQty,
               var_issueRetQty,var_purRetQty,
               var_IssueQty,var_adjustQty,clo_Balance);

    if mycursor%isopen then
      fetch mycursor into var_item,var_group,var_item_unit; 
      exit when mycursor%notfound;
   end if;
   if mycursor1%isopen then
      fetch mycursor1 into var_item,var_group,var_item_unit; 
      exit when mycursor1%notfound;
   end if;
   if mycursor2%isopen then
      fetch mycursor2 into var_item,var_group,var_item_unit; 
      exit when mycursor2%notfound;
   end if;
     
   end loop;
   commit;
   open p_test_cursor for
       select * from tmp_item ORDER BY ITEM_TITLE ;
 if mycursor%isopen then
    close mycursor;
  end if;
if mycursor1%isopen then
    close mycursor1;
  end if;
if mycursor2%isopen then
    close mycursor2;
  end if;
end;












create or replace procedure Rpt_Item_Ledger    
     (p_test_cursor in out test_package.test_type,
   p_option number,p_Item_Code VARCHAR2,p_s_date date,p_e_date date)
as

begin
if p_option=1 then

open p_test_cursor for

SELECT 1 as serial, p_s_date AS T_DATE,(select group_name from item_group_info where to_number(group_code)=
        (select to_number(group_code) from item_info where to_number(item_code)=to_number(p_item_code))) item_group,
       (select unit_name from item_unit_info where to_number(unit_code)=
        (select to_number(unit_code) from item_info where to_number(item_code)=to_number(p_item_code))) unit,
  'Opening Balance' as Title,' ' as particular,
         to_char(0) as purchase,to_char(0) as issueReturn,to_char(0) as Issue,
        to_char(0) as purchaseReturn,to_char(0) as Adjustment,
          to_char(GetOpnBalance(p_Item_Code,p_s_date)) as Balance
 from dual

union all

 select 2 as serial, a.PurDate as T_DATE,(select group_name from item_group_info where to_number(group_code)=
        (select to_number(group_code) from item_info where to_number(item_code)=to_number(p_item_code))) item_group,(select unit_name from item_unit_info where to_number(unit_code)=
        (select to_number(unit_code) from item_info where to_number(item_code)=to_number(p_item_code))) unit,
       a.purid as title,particulars(1,a.purid) as particular,to_char(b.PurQty) as purchase,
     to_char(0) as issueReturn,to_char(0) as Issue,
        to_char(0) as purchaseReturn,to_char(0) as Adjustment,to_char(0) as Balance
   from purchasemain a ,purchasesub b
     where a.purid=b.purid and to_number(b.itemId)=to_number(p_Item_Code) and
     (to_date(to_char(a.purdate,'dd-mon-yyyy'),'dd-mon-yyyy')
         >=to_date(to_char(p_s_date,'dd-mon-yyyy'),'dd-mon-yyyy') and 
          to_date(to_char(a.purdate,'dd-mon-yyyy'),'dd-mon-yyyy')
         <=to_date(to_char(p_e_date,'dd-mon-yyyy'),'dd-mon-yyyy'))

union all

 select 2 as serial,a.PurReturnDate as T_DATE,(select group_name from item_group_info where to_number(group_code)=
        (select to_number(group_code) from item_info where to_number(item_code)=to_number(p_item_code))) item_group,(select unit_name from item_unit_info where to_number(unit_code)=
        (select to_number(unit_code) from item_info where to_number(item_code)=to_number(p_item_code))) unit,
     a.PurReturnId as title,particulars(3,a.PurReturnId) as particular,to_char(0) as purchase,
     to_char(0) as issueReturn,to_char(0) as Issue,
        to_char(b.ReturnQty)  as purchaseReturn,to_char(0) as Adjustment,to_char(0) as Balance
   from PurchaseReturnMain a ,PurchaseReturnSub b
     where a.PurReturnId =b.PurReturnId  and to_number(b.ItemCode)=to_number(p_Item_Code) and
     (to_date(to_char(a.PurReturnDate,'dd-mon-yyyy'),'dd-mon-yyyy')
         >=to_date(to_char(p_s_date,'dd-mon-yyyy'),'dd-mon-yyyy') and 
          to_date(to_char(a.PurReturnDate,'dd-mon-yyyy'),'dd-mon-yyyy')
         <=to_date(to_char(p_e_date,'dd-mon-yyyy'),'dd-mon-yyyy'))

union all

select 2 as serial, a.issueDate as T_DATE,(select group_name from item_group_info where to_number(group_code)=
        (select to_number(group_code) from item_info where to_number(item_code)=to_number(p_item_code))) item_group,(select unit_name from item_unit_info where to_number(unit_code)=
        (select to_number(unit_code) from item_info where to_number(item_code)=to_number(p_item_code))) unit,
   a.issueid as title,particulars(2,a.issueid) as particular,to_char(0) as purchase,
     to_char(0) as issueReturn,to_char(b.Qty) as Issue,
        to_char(0) as purchaseReturn,to_char(0) as Adjustment,to_char(0) as Balance
   from issuemain a ,issuesub b
     where a.issueid=b.issueid and to_number(b.ItemCode)=to_number(p_Item_Code) and
     (to_date(to_char(a.issuedate,'dd-mon-yyyy'),'dd-mon-yyyy')
         >=to_date(to_char(p_s_date,'dd-mon-yyyy'),'dd-mon-yyyy') and 
          to_date(to_char(a.issuedate,'dd-mon-yyyy'),'dd-mon-yyyy')
         <=to_date(to_char(p_e_date,'dd-mon-yyyy'),'dd-mon-yyyy'))


union all

select 2 as serial,a.ReturnDate as T_DATE,(select group_name from item_group_info where to_number(group_code)=
        (select to_number(group_code) from item_info where to_number(item_code)=to_number(p_item_code))) item_group,(select unit_name from item_unit_info where to_number(unit_code)=
        (select to_number(unit_code) from item_info where to_number(item_code)=to_number(p_item_code))) unit,
    a.ReturnId as title,particulars(4,a.ReturnId) as particular,to_char(0) as purchase,
     to_char(b.Qty) as issueReturn,to_char(0) as Issue,
        to_char(0) as purchaseReturn,to_char(0) as Adjustment,to_char(0) as Balance
   from IssueReturnMain a ,IssueReturnSub b
     where a.ReturnId =b.ReturnId and to_number(b.ItemCode)=to_number(p_Item_Code) and
     (to_date(to_char(a.ReturnDate,'dd-mon-yyyy'),'dd-mon-yyyy')
         >=to_date(to_char(p_s_date,'dd-mon-yyyy'),'dd-mon-yyyy') and 
          to_date(to_char(a.ReturnDate,'dd-mon-yyyy'),'dd-mon-yyyy')
         <=to_date(to_char(p_e_date,'dd-mon-yyyy'),'dd-mon-yyyy'))

union all

select 2 as serial,a.AdjustmentDate as T_DATE,(select group_name from item_group_info where to_number(group_code)=
        (select to_number(group_code) from item_info where to_number(item_code)=to_number(p_item_code))) item_group,(select unit_name from item_unit_info where to_number(unit_code)=
        (select to_number(unit_code) from item_info where to_number(item_code)=to_number(p_item_code))) unit,
    a.AdjustmentId as title,particulars(5,a.AdjustmentId) as particular,to_char(0) as purchase,
     to_char(0) as issueReturn,to_char(0) as Issue,
        to_char(0) as purchaseReturn,to_char(b.AdjQty) as Adjustment,to_char(0) as Balance
   from AdjustmentMain a ,AdjustmentSub b
     where a.AdjustmentId =b.AdjustmentId and to_number(b.ItemCode)=to_number(p_Item_Code) and
     (to_date(to_char(a.AdjustmentDate,'dd-mon-yyyy'),'dd-mon-yyyy')
         >=to_date(to_char(p_s_date,'dd-mon-yyyy'),'dd-mon-yyyy') and 
          to_date(to_char(a.AdjustmentDate,'dd-mon-yyyy'),'dd-mon-yyyy')
         <=to_date(to_char(p_e_date,'dd-mon-yyyy'),'dd-mon-yyyy'))
 
union all
SELECT  3 as serial,p_e_date AS T_DATE ,(select group_name from item_group_info where to_number(group_code)=
        (select to_number(group_code) from item_info where to_number(item_code)=to_number(p_item_code))) item_group,(select unit_name from item_unit_info where to_number(unit_code)=
        (select to_number(unit_code) from item_info where to_number(item_code)=to_number(p_item_code))) unit,
   'Closing Balance' as Title,' ' as particular,
         to_char(0) as purchase,to_char(0) as issueReturn,to_char(0) as Issue,
        to_char(0) as purchaseReturn,to_char(0) as Adjustment,to_char(GetOpnBalance(p_Item_Code,p_e_date+1)) as Balance
 from dual;

end if;
end;




/*---------------------Start view-----------------------------------------------------*\
create or replace view min_stock_view as 
select a.cate_code,a.type_code,a.group_code,a.unit_code, a.item_code, a.item_name,a.re_ord_lbl,SUM(b.urate*b.purqty) as value,sum(b.PurQty-(b.UsedQty+b.ReturnQty)) as stock
      from  item_info a, PurchaseSub b
 where  to_number(a.item_code) = to_number(b.ITEMID)
 group by a.cate_code,a.type_code,a.group_code, a.item_code, a.item_name,a.re_ord_lbl,a.unit_code
/*---------------------end of view-----------------------------------------------------*\



create or replace procedure Rpt_minimum_Banalce_info 
     (p_test_cursor in out test_package.test_type,
      p_option number, p_CatCode VARCHAR2,p_type_code varchar2,p_group_code varchar2)
as
begin
if p_option=1 then --- all
 open p_test_cursor for
   select a.type_code,a.group_code,(select group_name from item_group_info where group_code=a.group_code) as item_group,
   (select unit_name from item_unit_info where unit_code=a.unit_code) as Unit_title, a.item_code, a.item_name,a.re_ord_lbl,a.stock
      from  min_stock_view a
  where a.re_ord_lbl>a.stock;
end if;
if p_option=2 then --- Category specific 
 open p_test_cursor for
   select a.type_code, a.group_code,(select group_name from item_group_info where group_code=a.group_code) as item_group,
  (select unit_name from item_unit_info where unit_code=a.unit_code) as Unit_title,a.item_code, a.item_name,a.re_ord_lbl,a.stock
      from  min_stock_view a
  where a.re_ord_lbl>a.stock and to_number(a.cate_code)=to_number(p_CatCode);
end if;
end;


-----------view  issue sub ------------------------
create or replace view  Issue_sub_view
  as 
  select IssueId,ItemCode,sum(Qty) as qty
      from issuesub 
  group by IssueId,ItemCode  

--------------------------------------------------


create or replace procedure Rpt_Issue_info 
     (p_test_cursor in out test_package.test_type,
      p_option number, P_issue_id VARCHAR2)
as
begin
if p_option=1 then --- all
 open p_test_cursor for
       select a.IssueId,a.indent_no,a.indent_date,a.reg_no,a.IssueDate,a.IssueType,
       (select type_name from item_issue_type where type_code=a.IssueType) as TypeTItle,
       a.Remarks,b.ItemCode,(select item_name from item_info 
    where to_number(item_code)=to_number(b.itemcode)) as Title,
     (select unit_name from item_unit_info where to_number(unit_code)=
        (select to_number(unit_code) from item_info where to_number(item_code)=to_number(b.itemcode))) unit,
       b.Qty,u.UserName

           from  IssueMain a,Issue_sub_view b,UserInfo u

      where a.IssueId=b.IssueId and a.issueid=P_issue_id and a.create_by=u.UserID;
end if;
end;





 
create or replace view min_stock_view as 
select a.cate_code,a.type_code,a.group_code,a.unit_code, a.item_code, a.item_name,a.re_ord_lbl,SUM(b.urate*b.purqty) as value,sum(b.PurQty-(b.UsedQty+b.ReturnQty)) as stock
      from  item_info a, PurchaseSub b
 where  to_number(a.item_code) = to_number(b.ITEMID)
 group by a.cate_code,a.type_code,a.group_code, a.item_code, a.item_name,a.re_ord_lbl,a.unit_code




create or replace view  item_description_view
  as 
  select i.cate_code cate_code,i.type_code type_code,i.group_code group_code,i.item_code item_code,i.Item_name item_name,
             u.unit_name unit_name,c.cate_name category_name,g.group_name,t.type_name type_name
      from item_info i,item_unit_info u,item_cate_info c,item_group_info g,item_type_info t
where i.unit_code=u.unit_code and c.cate_code=i.cate_code and g.group_code=i.group_code and i.type_code=t.type_code;
  



create or replace view  item_purchase_view
  as 
  select b.purid purid,b.purdate purdate,a.itemid item_id,a.purQty purchase_quantity,a.urate unit_rate
      from purchasesub a,purchasemain b,item_description_view v
where a.purid=b.purid ;
  







create or replace procedure Rpt_stock_valuation
     (p_test_cursor in out test_package.test_type,
      p_option number, p_CatCode VARCHAR2,p_type_code varchar2,p_group_code varchar2,p_s_date date,p_e_date date)
as
begin
if p_option=1 then --- all
open p_test_cursor for
SELECT ITEM_ID,ITEM_NAME,TO_CHAR(OPENING_STOCK+PURCHASE_QTY-ISSUE_QTY) AS STOCK,(OPENING_VALUE+PURCHASE_VALUE-ISSUE_VALUE) AS VALUE
 FROM (
Select item_id,item_name,sum(opening_stock) opening_stock,sum(opening_value) opening_value,
     sum(purchase_qty) purchase_Qty,sum(issue_qty) issue_qty,sum(purchase_value) purchase_value,sum(issue_value) issue_value
  from (

        select a.itemid item_id,v.item_name item_name,GetOpnBalance(1,a.itemid,p_s_date) opening_stock,GetOpnBalance(2,a.itemid,p_s_date) opening_value,
        0 as purchase_qty ,0 as issue_qty,0 as purchase_value,0 as issue_value
          from purchasesub a,purchasemain b,item_description_view v
       where  a.purid =b.purid and to_number(a.itemid)=to_number(v.item_code) and  to_number(v.cate_code)=to_number(p_CatCode)
          and (to_date(to_char(b.purdate,'dd-mon-yyyy'),'dd-mon-yyyy')
         < to_date(to_char(p_s_date,'dd-mon-yyyy'),'dd-mon-yyyy')) 
       group by a.itemid,v.item_name
       union
       select a.itemid item_id,v.item_name item_name,0 as opening_stock,0 as opening_value,nvl(sum(a.purqty),0) purchase_qty ,0 as issue_qty,nvl(sum(a.purqty*a.urate),0) purchase_value,0 as issue_value
          from purchasesub a,purchasemain b,item_description_view v
       where  a.purid =b.purid and to_number(a.itemid)=to_number(v.item_code) and  to_number(v.cate_code)=to_number(p_CatCode)
          and (to_date(to_char(b.purdate,'dd-mon-yyyy'),'dd-mon-yyyy')
         >=to_date(to_char(p_s_date,'dd-mon-yyyy'),'dd-mon-yyyy') and
          to_date(to_char(b.purdate,'dd-mon-yyyy'),'dd-mon-yyyy')
         <=to_date(to_char(p_e_date,'dd-mon-yyyy'),'dd-mon-yyyy'))
        group by a.itemid,v.item_name
       union
      select a.itemcode item_id,v.item_name item_name,0 as opening_stock,0 as opening_value, 0 purchase_qty,nvl(sum(a.Qty),0) issue_qty,0 as purchase_value,nvl(sum(a.Qty*a.urate),0) issue_value
      from Issuesub a, IssueMain b ,item_description_view v
   where a.IssueId =b.IssueId and  to_number(a.itemcode)=to_number(v.item_code) and to_number(v.cate_code)=to_number(p_CatCode)
     and (to_date(to_char(b.IssueDate,'dd-mon-yyyy'),'dd-mon-yyyy')
         >=to_date(to_char(p_s_date,'dd-mon-yyyy'),'dd-mon-yyyy') and
          to_date(to_char(b.IssueDate,'dd-mon-yyyy'),'dd-mon-yyyy')
         <=to_date(to_char(p_e_date,'dd-mon-yyyy'),'dd-mon-yyyy'))
       group by a.itemcode,v.item_name)
group by item_id,item_name 
order by item_name);


elsif p_option=2 then --- all
open p_test_cursor for
SELECT ITEM_ID,ITEM_NAME,TO_CHAR(OPENING_STOCK+PURCHASE_QTY-ISSUE_QTY) AS STOCK,(OPENING_VALUE+PURCHASE_VALUE-ISSUE_VALUE) AS VALUE
 FROM (
  Select item_id,item_name,sum(opening_stock) opening_stock,sum(opening_value) opening_value,
     sum(purchase_qty) purchase_Qty,sum(issue_qty) issue_qty,sum(purchase_value) purchase_value,sum(issue_value) issue_value
  from (

        select a.itemid item_id,v.item_name item_name,GetOpnBalance(1,a.itemid,p_s_date) opening_stock,GetOpnBalance(2,a.itemid,p_s_date) opening_value,
        0 purchase_qty ,0 as issue_qty,0 purchase_value,0 as issue_value
          from purchasesub a,purchasemain b,item_description_view v
       where  a.purid =b.purid and to_number(a.itemid)=to_number(v.item_code) and to_number(v.cate_code)=to_number(p_CatCode) and  to_number(v.type_code)=to_number(p_type_code)
          and (to_date(to_char(b.purdate,'dd-mon-yyyy'),'dd-mon-yyyy')
         < to_date(to_char(p_s_date,'dd-mon-yyyy'),'dd-mon-yyyy')) 
       group by a.itemid,v.item_name
       union
    select a.itemid item_id,v.item_name item_name,0 as opening_stock,0 as opening_value,nvl(sum(a.purqty),0) purchase_qty ,0 as issue_qty,nvl(sum(a.purqty*a.urate),0) purchase_value,0 as issue_value
          from purchasesub a,purchasemain b,item_description_view v
       where  a.purid =b.purid and to_number(a.itemid)=to_number(v.item_code) and   to_number(v.cate_code)=to_number(p_CatCode) and to_number(v.type_code)=to_number(p_type_code)
          and (to_date(to_char(b.purdate,'dd-mon-yyyy'),'dd-mon-yyyy')
         >=to_date(to_char(p_s_date,'dd-mon-yyyy'),'dd-mon-yyyy') and
          to_date(to_char(b.purdate,'dd-mon-yyyy'),'dd-mon-yyyy')
         <=to_date(to_char(p_e_date,'dd-mon-yyyy'),'dd-mon-yyyy'))
        group by a.itemid,v.item_name
       union
      select a.itemcode item_id,v.item_name item_name,0 as opening_stock,0 as opening_value, 0 purchase_qty,nvl(sum(a.Qty),0) issue_qty,0 as purchase_value,nvl(sum(a.Qty*a.urate),0) issue_value
      from Issuesub a, IssueMain b ,item_description_view v
   where a.IssueId =b.IssueId and  to_number(a.itemcode)=to_number(v.item_code) and to_number(v.cate_code)=to_number(p_CatCode) and  to_number(v.type_code)=to_number(p_type_code)
     and (to_date(to_char(b.IssueDate,'dd-mon-yyyy'),'dd-mon-yyyy')
         >=to_date(to_char(p_s_date,'dd-mon-yyyy'),'dd-mon-yyyy') and
          to_date(to_char(b.IssueDate,'dd-mon-yyyy'),'dd-mon-yyyy')
         <=to_date(to_char(p_e_date,'dd-mon-yyyy'),'dd-mon-yyyy'))
       group by a.itemcode,v.item_name)
group by item_id,item_name
order by item_name);

elsif p_option=3 then --- all
open p_test_cursor for
SELECT ITEM_ID,ITEM_NAME,TO_CHAR(OPENING_STOCK+PURCHASE_QTY-ISSUE_QTY) AS STOCK,(OPENING_VALUE+PURCHASE_VALUE-ISSUE_VALUE) AS VALUE
 FROM (
Select item_id,item_name,sum(opening_stock) opening_stock,sum(opening_value) opening_value,
     sum(purchase_qty) purchase_Qty,sum(issue_qty) issue_qty,sum(purchase_value) purchase_value,sum(issue_value) issue_value
  from (

        select a.itemid item_id,v.item_name item_name,GetOpnBalance(1,a.itemid,p_s_date) opening_stock,GetOpnBalance(2,a.itemid,p_s_date) opening_value,
        0 purchase_qty ,0 as issue_qty,0 purchase_value,0 as issue_value
          from purchasesub a,purchasemain b,item_description_view v
       where  a.purid =b.purid and to_number(a.itemid)=to_number(v.item_code) and to_number(v.cate_code)=to_number(p_CatCode) and  to_number(v.type_code)=to_number(p_type_code) and  to_number(v.group_code)=to_number(p_group_code)
          and (to_date(to_char(b.purdate,'dd-mon-yyyy'),'dd-mon-yyyy')
         < to_date(to_char(p_s_date,'dd-mon-yyyy'),'dd-mon-yyyy')) 
       group by a.itemid,v.item_name
       union
    select a.itemid item_id,v.item_name item_name,0 as opening_stock,0 as opening_value,nvl(sum(a.purqty),0) purchase_qty ,0 as issue_qty,nvl(sum(a.purqty*a.urate),0) purchase_value,0 as issue_value
          from purchasesub a,purchasemain b,item_description_view v
       where  a.purid =b.purid and to_number(a.itemid)=to_number(v.item_code) and   to_number(v.cate_code)=to_number(p_CatCode) and to_number(v.type_code)=to_number(p_type_code) and  to_number(v.group_code)=to_number(p_group_code)
          and (to_date(to_char(b.purdate,'dd-mon-yyyy'),'dd-mon-yyyy')
         >=to_date(to_char(p_s_date,'dd-mon-yyyy'),'dd-mon-yyyy') and
          to_date(to_char(b.purdate,'dd-mon-yyyy'),'dd-mon-yyyy')
         <=to_date(to_char(p_e_date,'dd-mon-yyyy'),'dd-mon-yyyy'))
        group by a.itemid,v.item_name
       union
      select a.itemcode item_id,v.item_name item_name,0 as opening_stock,0 as opening_value, 0 purchase_qty,nvl(sum(a.Qty),0) issue_qty,0 as purchase_value,nvl(sum(a.Qty*a.urate),0) issue_value
      from Issuesub a, IssueMain b ,item_description_view v
   where a.IssueId =b.IssueId and  to_number(a.itemcode)=to_number(v.item_code) and to_number(v.cate_code)=to_number(p_CatCode) and  to_number(v.type_code)=to_number(p_type_code) and  to_number(v.group_code)=to_number(p_group_code)
     and (to_date(to_char(b.IssueDate,'dd-mon-yyyy'),'dd-mon-yyyy')
         >=to_date(to_char(p_s_date,'dd-mon-yyyy'),'dd-mon-yyyy') and
          to_date(to_char(b.IssueDate,'dd-mon-yyyy'),'dd-mon-yyyy')
         <=to_date(to_char(p_e_date,'dd-mon-yyyy'),'dd-mon-yyyy'))
       group by a.itemcode,v.item_name)
group by item_id,item_name
order by item_name);

end if;
end;

