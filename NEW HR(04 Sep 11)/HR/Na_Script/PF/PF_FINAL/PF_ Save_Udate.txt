

--==PF_RECEIVE_SAVE==--
CREATE OR REPLACE  PROCEDURE PF_RECEIVE_SAVE 
(
P_PF_RECEIVE_ID NUMBER,
P_SOURCE_OF_FUND VARCHAR2,
P_DESCRIPTION VARCHAR2,
P_RECEIVE_DATE DATE,
P_RECEIVED_AMOUNT NUMBER,
P_RECEIVE_TYPE VARCHAR2,
P_CHECK_NO VARCHAR2,
P_ACCOUNT_NO VARCHAR2,
P_BANK_CODE VARCHAR2,
P_VOUCHER_NO VARCHAR2,
P_ACCOUNT_TYPE VARCHAR2
)

as
var_temp number;
V_PF_RECEIVE_ID NUMBER:=0;
V_ID NUMBER:=0;

begin
select count(*) into var_temp
from PF_RECEIVE
where PF_RECEIVE_ID=P_PF_RECEIVE_ID;

if var_temp>0 then
update PF_RECEIVE
set  
SOURCE_OF_FUND=P_SOURCE_OF_FUND,
DESCRIPTION=P_DESCRIPTION,
RECEIVE_DATE=P_RECEIVE_DATE,
RECEIVED_AMOUNT=P_RECEIVED_AMOUNT,
RECEIVE_TYPE=P_RECEIVE_TYPE,
CHECK_NO=P_CHECK_NO,
ACCOUNT_NO=P_ACCOUNT_NO,
BANK_CODE=P_BANK_CODE,
VOUCHER_NO=P_VOUCHER_NO,
ACCOUNT_TYPE=P_ACCOUNT_TYPE 
where PF_RECEIVE_ID=P_PF_RECEIVE_ID;
else

SELECT NVL(MAX(PF_RECEIVE_ID),0) INTO V_ID
FROM 
PF_RECEIVE;
V_PF_RECEIVE_ID:= V_ID + 1;



insert into PF_RECEIVE values(
	V_PF_RECEIVE_ID,
	P_SOURCE_OF_FUND,
	P_DESCRIPTION,
	P_RECEIVE_DATE,
	P_RECEIVED_AMOUNT,
	P_RECEIVE_TYPE,
	P_CHECK_NO,
	P_ACCOUNT_NO,
	P_BANK_CODE,
	P_VOUCHER_NO,
	P_ACCOUNT_TYPE
	);
end if;
commit;
end  PF_RECEIVE_SAVE;

/




--==PF_RECEIVE_DELETE=--

CREATE OR REPLACE  PROCEDURE PF_RECEIVE_DELETE
    (
P_PF_RECEIVE_ID NUMBER
)
as
var_temp number;
begin
select count(*) into var_temp
from PF_RECEIVE
where PF_RECEIVE_ID=P_PF_RECEIVE_ID;
if var_temp>0 then
Delete from PF_RECEIVE where PF_RECEIVE_ID=P_PF_RECEIVE_ID;
end if;
commit;
end  PF_RECEIVE_DELETE;
/








--==PF_PAYMENT_SAVE==--

CREATE OR REPLACE  PROCEDURE PF_PAYMENT_SAVE 
(
P_PF_PAYMENT_ID NUMBER,
P_PURPOSE_OF_PAYMENT VARCHAR2,
P_DESCRIPTION VARCHAR2,
P_PAYMENT_DATE DATE,
P_PAYMENT_AMOUNT NUMBER,
P_PAYMENT_TYPE VARCHAR2,
P_CHECK_NO VARCHAR2,
P_ACCOUNT_NO VARCHAR2,
P_BANK_CODE VARCHAR2,
P_VOUCHER_NO VARCHAR2,
P_ACCOUNT_TYPE VARCHAR2
)

as
var_temp number;
V_PF_PAYMENT_ID NUMBER:=0;
V_ID NUMBER:=0;

begin
select count(*) into var_temp

from PF_PAYMENT where PF_PAYMENT_ID=P_PF_PAYMENT_ID;

if var_temp>0 then
update PF_PAYMENT
set  
PURPOSE_OF_PAYMENT=P_PURPOSE_OF_PAYMENT,
DESCRIPTION=P_DESCRIPTION,
PAYMENT_DATE=P_PAYMENT_DATE,
PAYMENT_AMOUNT=P_PAYMENT_AMOUNT,
PAYMENT_TYPE=P_PAYMENT_TYPE,
CHECK_NO=P_CHECK_NO,
ACCOUNT_NO=P_ACCOUNT_NO,
BANK_CODE=P_BANK_CODE,
VOUCHER_NO=P_VOUCHER_NO,
ACCOUNT_TYPE=P_ACCOUNT_TYPE;
else 
SELECT NVL(MAX(PF_PAYMENT_ID),0) INTO V_ID
FROM 
PF_PAYMENT;
V_PF_PAYMENT_ID:= V_ID + 1;

insert into PF_PAYMENT values(
	V_PF_PAYMENT_ID,
	P_PURPOSE_OF_PAYMENT,
	P_DESCRIPTION,
	P_PAYMENT_DATE,
	P_PAYMENT_AMOUNT,
	P_PAYMENT_TYPE,
	P_CHECK_NO,
	P_ACCOUNT_NO,
	P_BANK_CODE,
	P_VOUCHER_NO,
	P_ACCOUNT_TYPE	
	);
end if;
commit;
end  PF_PAYMENT_SAVE;

/



--==PF_PAYMENT_DELETE==--

CREATE OR REPLACE  PROCEDURE PF_PAYMENT_DELETE
    (
P_PF_PAYMENT_ID NUMBER
)
as
var_temp number;
begin
select count(*) into var_temp
from PF_PAYMENT
where PF_PAYMENT_ID=P_PF_PAYMENT_ID;
if var_temp>0 then
Delete from PF_PAYMENT where PF_PAYMENT_ID=P_PF_PAYMENT_ID;
end if;
commit;
end  PF_PAYMENT_DELETE;
/




-- MEMBER_FUND_SAVE ----

CREATE OR REPLACE  PROCEDURE MEMBER_FUND_SAVE 
(
P_TRACK_ID NUMBER,
P_ACCOUNT_TYPE VARCHAR2,
P_ACCOUNT_NO VARCHAR2,
P_BANK_CODE VARCHAR2,
P_AMOUNT NUMBER
)

as
var_temp number;
V_TRACK_ID NUMBER:=0;
V_ID NUMBER:=0;

begin
select count(*) into var_temp
from MEMBER_FUND 
where TRACK_ID=P_TRACK_ID;


if var_temp>0 then
update MEMBER_FUND
set  
 ACCOUNT_TYPE=p_ACCOUNT_TYPE ,
 ACCOUNT_NO=p_ACCOUNT_NO,
 BANK_CODE=p_BANK_CODE,
 AMOUNT=p_AMOUNT 
where TRACK_ID=p_TRACK_ID;
else

SELECT nvl(MAX(TRACK_ID),0) INTO V_ID
FROM 
MEMBER_FUND;
V_TRACK_ID:= V_ID + 1;



insert into MEMBER_FUND values(
	V_TRACK_ID,
	P_ACCOUNT_TYPE,
	P_ACCOUNT_NO,
	P_BANK_CODE,
	P_AMOUNT
	);
end if;
commit;
end  MEMBER_FUND_SAVE;
/


--==MEMBER_FUND_DELETE==--

CREATE OR REPLACE  PROCEDURE MEMBER_FUND_DELETE
    (
P_TRACK_ID NUMBER
)
as
var_temp number;
begin
select count(*) into var_temp
from MEMBER_FUND
where TRACK_ID=P_TRACK_ID;
if var_temp>0 then
Delete from MEMBER_FUND where TRACK_ID=P_TRACK_ID;
end if;
commit;
end  MEMBER_FUND_DELETE;
/


