--PROCEDURE NAME: RPT_GRA_INCOME_EXPENCE
--DESCRIPTION: PREPARE REPORT FOR GRATUITY INCOME AND EXPENDITURE  
--================================================================================

CREATE OR REPLACE  PROCEDURE RPT_GRA_INCOME_EXPENCE
(p_test_cursor in out
test_package.test_type,
P_BEGIN_DATE DATE,
P_END_DATE DATE
)
as
begin
open p_test_cursor for 
select 
GRA_RECEIVE_ID AS ID,
PAYMENT_RECE_DATE AS RD,
DESCRIPTION AS Des,
RECEIVED_AMOUNT AS Ramount,0 AS Pamount
from 
gratuity_receive 
WHERE PAYMENT_RECE_DATE BETWEEN P_BEGIN_DATE AND P_END_DATE 
GROUP BY 
GRA_RECEIVE_ID,PAYMENT_RECE_DATE,DESCRIPTION,RECEIVED_AMOUNT 
union 
select 
GRA_PAYMENT_ID AS ID,
PAYMENT_DATE AS RD,
DESCRIPTION AS Des,
0 AS Ramount,AMOUNT AS Pamount
from 
gratuity_payment 
WHERE PAYMENT_DATE BETWEEN P_BEGIN_DATE AND P_END_DATE 
GROUP BY 
GRA_PAYMENT_ID,PAYMENT_DATE,DESCRIPTION,AMOUNT;
end RPT_GRA_INCOME_EXPENCE;

/

--VARIABLE C REFCURSOR;
--EXEC RPT_GRA_INCOME_EXPENCE(:C,'01-JUL-2005','30-JUN-2006');
--PRINT C;




--PROCEDURE NAME: RPT_GRA_CASHBOOK
--DESCRIPTION: PREPARE REPORT FOR GRATUITY CASH BOOK  
--================================================================================


CREATE OR REPLACE  PROCEDURE RPT_GRA_CASHBOOK
(p_test_cursor in out
test_package.test_type,
P_BEGIN_DATE DATE,
P_END_DATE DATE
)
as
begin
open p_test_cursor for
SELECT 
0 AS ID,
P_BEGIN_DATE as RD,
' ' AS VO,
'OPENGING BALANCE' AS DES,
SUM(AMOUNT) AS Ramount,0 AS Pamount,
' ' AS PT,
' ' AS ACCOUNT_TYPE,
' ' AS CN,
' ' AS AN,
' ' AS BANK_CODE
FROM
GRA_CAPITAL_FUND 
union
select 
GRA_RECEIVE_ID AS ID,
PAYMENT_RECE_DATE AS RD,
VOUCHER_NO as VO,
description des,
RECEIVED_AMOUNT AS Ramount,0 AS Pamount,
PAYMENT_RECE_TYPE AS PT,
(SELECT TYPE_NAME FROM L_ACCOUNT_TYPE LA WHERE ACCOUNT_TYPE=LA.TYPE_ID) AS ACCOUNT_TYPE,
CHECK_NO as CN,
ACCOUNT_NO as AN,
(SELECT BANK_NAME FROM L_BANK LB WHERE BANK_CODE=LB.BANK_ID) AS BANK_CODE
from
gratuity_receive 
WHERE PAYMENT_RECE_DATE BETWEEN P_BEGIN_DATE AND P_END_DATE 
GROUP BY
GRA_RECEIVE_ID,PAYMENT_RECE_DATE,
VOUCHER_NO,DESCRIPTION,RECEIVED_AMOUNT,
PAYMENT_RECE_TYPE,ACCOUNT_TYPE,CHECK_NO,ACCOUNT_NO,BANK_CODE 
union
select 
GRA_PAYMENT_ID AS ID,
PAYMENT_DATE AS RD,
VOUCHER_NO as VO,
description AS des,
0 AS Ramount,AMOUNT AS Pamount,
PAYMENT_TYPE AS PT,
(SELECT TYPE_NAME FROM L_ACCOUNT_TYPE LA WHERE ACCOUNT_TYPE=LA.TYPE_ID) AS ACCOUNT_TYPE,
CHECK_NO as CN,
ACCOUNT_NO as AN,
(SELECT BANK_NAME FROM L_BANK LB WHERE BANK_CODE=LB.BANK_ID) AS BANK_NAME
from
gratuity_payment 
WHERE PAYMENT_DATE BETWEEN P_BEGIN_DATE AND P_END_DATE 
GROUP BY
GRA_PAYMENT_ID,PAYMENT_DATE,
VOUCHER_NO,DESCRIPTION,AMOUNT,
PAYMENT_TYPE,ACCOUNT_TYPE,CHECK_NO,ACCOUNT_NO,BANK_CODE;
end RPT_GRA_CASHBOOK;

/

--VARIABLE C REFCURSOR;
--EXEC RPT_GRA_CASHBOOK(:C,'01-JUL-2005','30-JUN-2006');
--PRINT C;


--PROCEDURE NAME: RPT_GRA_BANK_ACCO_STATEMENT
--DESCRIPTION: PREPARE REPORT FOR GRATUITY BANK ACCOUNT STATEMENT  
--================================================================================

CREATE OR REPLACE PROCEDURE RPT_GRA_BANK_ACCO_STATEMENT
(p_test_cursor in out
test_package.test_type,
P_BANK_CODE VARCHAR2,
P_ACCOUNT_TYPE VARCHAR2,
P_ACCOUNT_NO VARCHAR2,
P_BEGIN_DATE DATE,
P_END_DATE DATE
)
as
begin
open p_test_cursor for
SELECT
TRACK_ID AS ID,
P_BEGIN_DATE AS DDATE,
ACCOUNT_NO,
(SELECT TYPE_NAME FROM L_ACCOUNT_TYPE LAT WHERE ACCOUNT_TYPE=LAT.TYPE_ID) AS ACCOUNT_TYPE,
'OPENING BALANCE' AS DES,
AMOUNT AS O_AMOUNT,0 AS P_AMOUNT,
' ' AS PT,
(SELECT BANK_NAME FROM L_BANK LB WHERE BANK_CODE=LB.BANK_ID) AS BANK_CODE
FROM
GRA_CAPITAL_FUND 
WHERE 
BANK_CODE=P_BANK_CODE 
AND ACCOUNT_TYPE=P_ACCOUNT_TYPE 
AND ACCOUNT_NO=P_ACCOUNT_NO 
UNION
SELECT 
GRA_RECEIVE_ID AS ID,
PAYMENT_RECE_DATE AS DDATE,
ACCOUNT_NO,
(SELECT TYPE_NAME FROM L_ACCOUNT_TYPE LAT WHERE ACCOUNT_TYPE=LAT.TYPE_ID) AS ACCOUNT_TYPE,
DESCRIPTION AS DES,
RECEIVED_AMOUNT AS O_AMOUNT,0 AS P_AMOUNT,
PAYMENT_RECE_TYPE AS PT,
(SELECT BANK_NAME FROM L_BANK LB WHERE BANK_CODE=LB.BANK_ID) AS BANK_CODE
FROM GRATUITY_RECEIVE
WHERE 
BANK_CODE=P_BANK_CODE 
AND ACCOUNT_TYPE=P_ACCOUNT_TYPE 
AND ACCOUNT_NO=P_ACCOUNT_NO 
AND PAYMENT_RECE_DATE BETWEEN P_BEGIN_DATE AND P_END_DATE 
GROUP BY GRA_RECEIVE_ID,PAYMENT_RECE_DATE,
ACCOUNT_NO,ACCOUNT_TYPE,
DESCRIPTION,RECEIVED_AMOUNT,
PAYMENT_RECE_TYPE,BANK_CODE 
UNION
SELECT 
GRA_PAYMENT_ID AS ID,
PAYMENT_DATE AS DDATE,
ACCOUNT_NO,
(SELECT TYPE_NAME FROM L_ACCOUNT_TYPE LAT WHERE ACCOUNT_TYPE=LAT.TYPE_ID) AS ACCOUNT_TYPE,
DESCRIPTION AS DES,
0 AS O_AMOUNT,AMOUNT AS P_AMOUNT,
PAYMENT_TYPE AS PT,
(SELECT BANK_NAME FROM L_BANK LB WHERE BANK_CODE=LB.BANK_ID) AS BANK_CODE
FROM GRATUITY_PAYMENT
WHERE 
BANK_CODE=P_BANK_CODE 
AND ACCOUNT_TYPE=P_ACCOUNT_TYPE 
AND ACCOUNT_NO=P_ACCOUNT_NO 
AND PAYMENT_DATE BETWEEN P_BEGIN_DATE AND P_END_DATE 
GROUP BY 
GRA_PAYMENT_ID,PAYMENT_DATE,
ACCOUNT_NO,ACCOUNT_TYPE,DESCRIPTION,AMOUNT,
PAYMENT_TYPE,BANK_CODE;
END RPT_GRA_BANK_ACCO_STATEMENT;

/



--VARIABLE C REFCURSOR;
--EXEC RPT_GRA_BANK_ACCO_STATEMENT(:C,'001','001','AC-001','01-JUL-2005','30-JUN-2006');
--PRINT C;


--========GRATUITY_BALANCE_SHEET
CREATE OR REPLACE PROCEDURE GRATUITY_BALANCE_SHEET 
(p_test_cursor in out
test_package.test_type,
P_BEGIN_DATE DATE,
P_END_DATE DATE
)
as
begin
open p_test_cursor for 
SELECT 
AMOUNT AS CAPITAL_FUND,0 AS  TOTAL_RECEIVE_AMOUNT,0 AS TOTAL_PAYMENT_AMOUNT
FROM 
GRA_CAPITAL_FUND 
GROUP BY TRACK_ID,ACCOUNT_NO,BANK_CODE,ACCOUNT_TYPE,AMOUNT
UNION 
SELECT 
0 AS CAPITAL_FUND, RECEIVED_AMOUNT AS TOTAL_RECEIVE_AMOUNT, 0 AS TOTAL_PAYMENT_AMOUNT
FROM 
GRATUITY_RECEIVE 
WHERE PAYMENT_RECE_DATE BETWEEN P_BEGIN_DATE AND P_END_DATE 
GROUP BY GRA_RECEIVE_ID,ACCOUNT_NO,BANK_CODE,ACCOUNT_TYPE,RECEIVED_AMOUNT 
UNION 
SELECT 
0 AS CAPITAL_FUND, 0 AS TOTAL_RECEIVE_AMOUNT,AMOUNT AS TOTAL_PAYMENT_AMOUNT
FROM 
GRATUITY_PAYMENT  
WHERE PAYMENT_DATE BETWEEN P_BEGIN_DATE AND P_END_DATE 
GROUP BY GRA_PAYMENT_ID,ACCOUNT_NO,BANK_CODE,ACCOUNT_TYPE,AMOUNT;
end GRATUITY_BALANCE_SHEET;

/



